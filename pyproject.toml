[tool.poetry]
name = "hej"
version = "0.1.0"
description = "Simple browser-based personal wiki"
authors = ["Sebastian Rittau <srittau@rittau.biz>"]
license = "MIT"
package-mode = false

[tool.poetry.dependencies]
python = "~3.12"
aiofiles = ">=23.2.1"
aiosqlite = "~0.20.0"
ariadne = "~0.23"
dbupgrade = "^2023.10.0"
click = "^8.0.3"
graphql-core = "^3.2.5"
starlette = "~0.42.0"
uvicorn = { version = "~0.34.0", extras = ["standard"] }

[tool.poetry.group.dev.dependencies]
asserts = "^0.13.1"
mypy = "~1.14.0"
poethepoet = "^0.31.1"
pytest = "*"
pytest-asyncio = "^0.25.0"
pytest-mock = "^3.14.0"
ruff = "^0.8.3"
types-aiofiles = "^24.1.0.20241221"

[tool.ruff]
target-version = "py312"
line-length = 79
include = ["pyproject.toml", "pylibs/**/*.py"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "W", "RUF"]
per-file-ignores= {"test_**.py" = ["F401", "F811"]}

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = ["future", "standard-library", "third-party", "first-party", "hej", "local-folder"]

[tool.ruff.lint.isort.sections]
"hej" = ["hej"]

[tool.pytest.ini_options]
testpaths = ["pylibs"]
asyncio_mode = "auto"
filterwarnings = [
    # "https://github.com/graphql-python/graphql-core/issues/211"
    "ignore:.*'typing.ByteString' is deprecated.*:DeprecationWarning",
]

[tool.mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poe.tasks]
test = "pytest"
lint = "ruff check pylibs"
typecheck = "mypy pylibs"

[tool.poe.tasks.start]
cmd = "uvicorn --reload hej.app:app"
[tool.poe.tasks.start.env]
PYTHONPATH = "pylibs"
HEJ_SESSION_KEY = "sikrit"
HEJ_DB_PATH = "test-db/hej.sqlite"
