scalar DateTime # YYYY-MM-DDTHH:MM:SSZ
"""
A note.
"""
type Note {
  """
  Unique UUID for this note.
  """
  uuid: ID!
  """
  Note title.
  """
  title: String!
  """
  Note text in Markdown format.
  """
  text: String!
  """
  Date the note was created.
  """
  creationDate: DateTime!
  """
  Date the note was last changed.
  """
  lastChanged: DateTime!
}

type Query {
  """
  List notes.

  If `uuid` is not specified, return a list of all notes. If `uuid` is
  specified, but the UUID is invalid or unknown, return an empty list,
  otherwise return a list with the requested note.
  """
  notes(uuid: ID): [Note!]!
}

type Mutation {
  """
  Login to hej.

  Return a session key to be provided as HejSessionKey cookie in subsequent
  requests on success. Return `null` if logging in failed.
  """
  login(password: String!): String

  """
  Logout from hej.

  Return `true`.
  """
  logout: Boolean!

  """
  Create a new note with a given title and (optionally) text.
  """
  createNote(title: String!, text: String): Note!

  """
  Update the title and/or text of an note.

  Return the changed note or `null` if the given UUID was invalid or
  unknown.
  """
  updateNote(uuid: ID!, title: String, text: String): Note

  """
  Delete an note.

  Return `true` if the note was deleted and `false` if the UUID was invalid
  or the note was unknown.
  """
  deleteNote(uuid: ID!): Boolean!
}
